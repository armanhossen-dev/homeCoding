special container : pair

2 different type of variable , same or different, we can make a group
and use them to work, we use pair


pair<define 2 types> nameVariable = {2tyes variable separated by comma};

    pari<int, int> p = {3,5};
    pair<char, int> p1 = {'a', 1};

    now to accesss the value, p.first = to access the first value
    and p.second = to access the second value
    
    here, p.first = 3, p.second = 5



vector<pair <int, int>> vec = {{1,2}, {2,3}, {3,4}, {4,5}};
now if we want to insert any element in the vector then

vec.push_back({5,6}); // while inserting we creating pair

vec.emplace_back(5,6);  // here we doesn't have to create pair to insert,
                     just add 2 data and it will be paired then added


////so here is the difference??
vec.push_back({5,6}); // inset direct, we have to make the pair 
vec.emplace_back(5,6); // in-place objects create, we insert 2 value, it creates pair, then added in main vector




    for(pair<int, int> p : vec){
    //for(auto p : vec){ //it works, auto detects the nececery type which should be
        cout << p.first << ' ' << p.second << endl;
    }












sequences
 - vector
 - list
 - deque



Non-sequences
 - 